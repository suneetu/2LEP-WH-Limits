 /***************************************************************************** 
  * Project: RooFit                                                           * 
  *                                                                           * 
  * This code was autogenerated by RooClassFactory                            * 
  *****************************************************************************/ 

 // Your description goes here... 

 #include "Riostream.h" 

 #include "SigmaLR.h" 
 #include "RooAbsReal.h" 
 #include "RooAbsCategory.h" 
 #include <math.h> 
 #include "TMath.h" 

 ClassImp(SigmaLR) 

 SigmaLR::SigmaLR(const char *name, const char *title, 
                        RooAbsReal& _sigmal,
                        RooAbsReal& _sigmar,
                        RooAbsReal& _x) :
   RooAbsReal(name,title), 
   sigmal("sigmal","sigmal",this,_sigmal),
   sigmar("sigmar","sigmar",this,_sigmar),
   x("x","x",this,_x),
   m_overwriteValue(0.),
   m_overwrite(kFALSE)
 { 
 } 


 SigmaLR::SigmaLR(const SigmaLR& other, const char* name) :  
   RooAbsReal(other,name), 
   sigmal("sigmal",this,other.sigmal),
   sigmar("sigmar",this,other.sigmar),
   x("x",this,other.x),
   m_overwriteValue(other.m_overwriteValue),
   m_overwrite(other.m_overwrite)
 { 
 } 



 Double_t SigmaLR::evaluate() const 
 { 
   if (m_overwrite) return m_overwriteValue;

   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   return x < 0 ? sigmal : sigmar ; 
 } 




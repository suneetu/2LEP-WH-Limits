/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef SIGMALR
#define SIGMALR

#include "RooAbsReal.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class SigmaLR : public RooAbsReal {
public:
  SigmaLR() {} ; 
  SigmaLR(const char *name, const char *title,
	      RooAbsReal& _sigmal,
	      RooAbsReal& _sigmar,
	      RooAbsReal& _x);
  SigmaLR(const SigmaLR& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new SigmaLR(*this,newname); }
  inline virtual ~SigmaLR() { }

  inline void setOverwriteValue(const Double_t& value) { m_overwrite=kTRUE; m_overwriteValue=value; }
  inline void setOverwrite(const Bool_t& overwrite) { m_overwrite=overwrite; }

protected:

  RooRealProxy sigmal ;
  RooRealProxy sigmar ;
  RooRealProxy x ;
  
  Double_t evaluate() const ;

private:

  Double_t m_overwriteValue;
  Bool_t m_overwrite;

  ClassDef(SigmaLR,1) // Your description goes here...
};
 
#endif
